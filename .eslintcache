[{"C:\\Users\\96897\\Desktop\\Coding\\Web-dev\\JS\\Papa-React-Challenge\\netflix-clone\\src\\index.js":"1","C:\\Users\\96897\\Desktop\\Coding\\Web-dev\\JS\\Papa-React-Challenge\\netflix-clone\\src\\App.js":"2","C:\\Users\\96897\\Desktop\\Coding\\Web-dev\\JS\\Papa-React-Challenge\\netflix-clone\\src\\serviceWorker.js":"3","C:\\Users\\96897\\Desktop\\Coding\\Web-dev\\JS\\Papa-React-Challenge\\netflix-clone\\src\\app\\store.js":"4","C:\\Users\\96897\\Desktop\\Coding\\Web-dev\\JS\\Papa-React-Challenge\\netflix-clone\\src\\Nav.js":"5","C:\\Users\\96897\\Desktop\\Coding\\Web-dev\\JS\\Papa-React-Challenge\\netflix-clone\\src\\Banner.js":"6","C:\\Users\\96897\\Desktop\\Coding\\Web-dev\\JS\\Papa-React-Challenge\\netflix-clone\\src\\axios.js":"7","C:\\Users\\96897\\Desktop\\Coding\\Web-dev\\JS\\Papa-React-Challenge\\netflix-clone\\src\\Requests.js":"8","C:\\Users\\96897\\Desktop\\Coding\\Web-dev\\JS\\Papa-React-Challenge\\netflix-clone\\src\\Row.js":"9","C:\\Users\\96897\\Desktop\\Coding\\Web-dev\\JS\\Papa-React-Challenge\\netflix-clone\\src\\screens\\HomeScreen.js":"10","C:\\Users\\96897\\Desktop\\Coding\\Web-dev\\JS\\Papa-React-Challenge\\netflix-clone\\src\\screens\\LoginScreen.js":"11","C:\\Users\\96897\\Desktop\\Coding\\Web-dev\\JS\\Papa-React-Challenge\\netflix-clone\\src\\screens\\SignupScreen.js":"12","C:\\Users\\96897\\Desktop\\Coding\\Web-dev\\JS\\Papa-React-Challenge\\netflix-clone\\src\\firebase.js":"13","C:\\Users\\96897\\Desktop\\Coding\\Web-dev\\JS\\Papa-React-Challenge\\netflix-clone\\src\\features\\userSlice.js":"14","C:\\Users\\96897\\Desktop\\Coding\\Web-dev\\JS\\Papa-React-Challenge\\netflix-clone\\src\\screens\\ProfileScreen.js":"15","C:\\Users\\96897\\Desktop\\Coding\\Web-dev\\JS\\Papa-React-Challenge\\netflix-clone\\src\\screens\\PlansScreen.js":"16","C:\\Users\\96897\\Desktop\\Coding\\Web-dev\\JS\\Papa-React-Challenge\\netflix-clone\\src\\Route\\PrivateRoute.js":"17"},{"size":644,"mtime":499162500000,"results":"18","hashOfConfig":"19"},{"size":1392,"mtime":1612611480260,"results":"20","hashOfConfig":"19"},{"size":5141,"mtime":499162500000,"results":"21","hashOfConfig":"19"},{"size":200,"mtime":1612558691228,"results":"22","hashOfConfig":"19"},{"size":1479,"mtime":1612566837808,"results":"23","hashOfConfig":"19"},{"size":1654,"mtime":1612600210469,"results":"24","hashOfConfig":"19"},{"size":136,"mtime":1612381113340,"results":"25","hashOfConfig":"19"},{"size":710,"mtime":1612381942413,"results":"26","hashOfConfig":"19"},{"size":1283,"mtime":1612444853921,"results":"27","hashOfConfig":"19"},{"size":1367,"mtime":1612612070040,"results":"28","hashOfConfig":"19"},{"size":1555,"mtime":1612612083543,"results":"29","hashOfConfig":"19"},{"size":2006,"mtime":1612558324788,"results":"30","hashOfConfig":"19"},{"size":630,"mtime":1612534900157,"results":"31","hashOfConfig":"19"},{"size":625,"mtime":1612596397448,"results":"32","hashOfConfig":"19"},{"size":1596,"mtime":1612614190197,"results":"33","hashOfConfig":"19"},{"size":3777,"mtime":1612614228557,"results":"34","hashOfConfig":"19"},{"size":501,"mtime":1612614312170,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1n163gs",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"C:\\Users\\96897\\Desktop\\Coding\\Web-dev\\JS\\Papa-React-Challenge\\netflix-clone\\src\\index.js",[],["75","76"],"C:\\Users\\96897\\Desktop\\Coding\\Web-dev\\JS\\Papa-React-Challenge\\netflix-clone\\src\\App.js",[],"C:\\Users\\96897\\Desktop\\Coding\\Web-dev\\JS\\Papa-React-Challenge\\netflix-clone\\src\\serviceWorker.js",[],"C:\\Users\\96897\\Desktop\\Coding\\Web-dev\\JS\\Papa-React-Challenge\\netflix-clone\\src\\app\\store.js",[],"C:\\Users\\96897\\Desktop\\Coding\\Web-dev\\JS\\Papa-React-Challenge\\netflix-clone\\src\\Nav.js",["77"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./Nav.css\";\r\n\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectUser } from \"./features/userSlice\";\r\n\r\nfunction Nav() {\r\n  const user = useSelector(selectUser);\r\n\r\n  const [show, setShow] = useState(false);\r\n  const history = useHistory();\r\n  const transitionNavBar = () => {\r\n    if (window.scrollY > 100) {\r\n      setShow(true);\r\n    } else {\r\n      setShow(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", transitionNavBar);\r\n\r\n    return () => window.removeEventListener(\"scroll\", transitionNavBar);\r\n  }, []);\r\n  return (\r\n    <div className={`nav ${show && \"nav__black\"}`}>\r\n      <div className=\"nav__contents\">\r\n        <div className=\"nav__images\">\r\n          <img\r\n            onClick={() => history.push(\"/\")}\r\n            style={{ cursor: \"pointer\" }}\r\n            className=\"nav__logo\"\r\n            src=\"https://assets.stickpng.com/images/580b57fcd9996e24bc43c529.png\"\r\n            alt=\"\"\r\n          />\r\n\r\n          <AccountCircleIcon\r\n            onClick={() => history.push(\"/profile\")}\r\n            style={{\r\n              height: \"35px\",\r\n              width: \"35px\",\r\n              color: \"#C0C0C0\",\r\n              cursor: \"pointer\",\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","C:\\Users\\96897\\Desktop\\Coding\\Web-dev\\JS\\Papa-React-Challenge\\netflix-clone\\src\\Banner.js",[],"C:\\Users\\96897\\Desktop\\Coding\\Web-dev\\JS\\Papa-React-Challenge\\netflix-clone\\src\\axios.js",[],"C:\\Users\\96897\\Desktop\\Coding\\Web-dev\\JS\\Papa-React-Challenge\\netflix-clone\\src\\Requests.js",[],"C:\\Users\\96897\\Desktop\\Coding\\Web-dev\\JS\\Papa-React-Challenge\\netflix-clone\\src\\Row.js",["78"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./Row.css\";\r\n\r\nimport axios from \"./axios\";\r\n\r\nfunction Row({ title, fetchUrl, isLargeRow = false }) {\r\n  const [movies, setMovies] = useState([]);\r\n\r\n  const base_url = \"https://image.tmdb.org/t/p/original/\";\r\n\r\n  function truncate(string, n) {\r\n    return string?.length > n ? string.substr(0, n - 1) + \"...\" : string;\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(fetchUrl);\r\n      console.log(request.data);\r\n      setMovies(request.data.results);\r\n      return request;\r\n    }\r\n\r\n    fetchData();\r\n  }, [fetchUrl]);\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <h2>{title}</h2>\r\n      <div className=\"row__posters\">\r\n        {movies.map((movie) => (\r\n      \r\n            ((isLargeRow && movie.poster_path) || (!isLargeRow &&\r\n            movie.backdrop_path)) && (\r\n            <img\r\n              className={`row__poster ${isLargeRow && \"row__posterLarge\"}`}\r\n              key={movie.id}\r\n              src={`${base_url}${\r\n                isLargeRow ? movie.poster_path : movie.backdrop_path\r\n              }`}\r\n              alt={movie.name}\r\n            />\r\n            )\r\n        \r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Row;\r\n","C:\\Users\\96897\\Desktop\\Coding\\Web-dev\\JS\\Papa-React-Challenge\\netflix-clone\\src\\screens\\HomeScreen.js",[],"C:\\Users\\96897\\Desktop\\Coding\\Web-dev\\JS\\Papa-React-Challenge\\netflix-clone\\src\\screens\\LoginScreen.js",[],"C:\\Users\\96897\\Desktop\\Coding\\Web-dev\\JS\\Papa-React-Challenge\\netflix-clone\\src\\screens\\SignupScreen.js",["79","80"],"import React, { useRef } from \"react\";\r\nimport { auth, provider } from \"../firebase\";\r\nimport \"./SignupScreen.css\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport { login } from \"../features/userSlice\";\r\n\r\nfunction SignupScreen() {\r\n  const emailRef = useRef();\r\n  const passwordRef = useRef();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const register = (e) => {\r\n    e.preventDefault();\r\n    auth\r\n      .createUserWithEmailAndPassword(\r\n        emailRef.current.value,\r\n        passwordRef.current.value\r\n      )\r\n      .then((authUser) => {\r\n        console.log(authUser);\r\n      })\r\n      .catch((error) => alert(error.message));\r\n  };\r\n\r\n  const signIn = (e) => {\r\n    e.preventDefault();\r\n\r\n    auth\r\n      .signInWithEmailAndPassword(\r\n        emailRef.current.value,\r\n        passwordRef.current.value\r\n      )\r\n      .then((authUser) => {\r\n        console.log(authUser);\r\n      })\r\n      .catch((err) => alert(err.message));\r\n  };\r\n\r\n  const googleSignIn = (e) => {\r\n    e.preventDefault();\r\n    auth\r\n      .signInWithPopup(provider)\r\n      .then((res) => console.log(res))\r\n      .catch((err) => alert(err.message));\r\n  };\r\n  return (\r\n    <div className=\"signupScreen\">\r\n      <form>\r\n        <h1>Sign In</h1>\r\n        <input type=\"email\" ref={emailRef} placeholder=\"Email\" />\r\n        <input type=\"password\" ref={passwordRef} placeholder=\"Password\" />\r\n        <button\r\n          onClick={signIn}\r\n          type=\"submit\"\r\n          className=\"signupScreen__loginBtn\"\r\n        >\r\n          Sign In\r\n        </button>\r\n        <button\r\n          onClick={googleSignIn}\r\n          type=\"submit\"\r\n          className=\"signupScreen__googleBtn\"\r\n        >\r\n          Sign up with Google\r\n        </button>\r\n\r\n        <h4>\r\n          <span className=\"signupScreen__gray\">New to Netflix? </span>\r\n          <span className=\"signupScreen__link\" onClick={register}>\r\n            Sign Up now.\r\n          </span>\r\n        </h4>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignupScreen;\r\n","C:\\Users\\96897\\Desktop\\Coding\\Web-dev\\JS\\Papa-React-Challenge\\netflix-clone\\src\\firebase.js",[],"C:\\Users\\96897\\Desktop\\Coding\\Web-dev\\JS\\Papa-React-Challenge\\netflix-clone\\src\\features\\userSlice.js",[],"C:\\Users\\96897\\Desktop\\Coding\\Web-dev\\JS\\Papa-React-Challenge\\netflix-clone\\src\\screens\\ProfileScreen.js",[],"C:\\Users\\96897\\Desktop\\Coding\\Web-dev\\JS\\Papa-React-Challenge\\netflix-clone\\src\\screens\\PlansScreen.js",["81"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectUser } from \"../features/userSlice\";\r\nimport { setPlan } from \"../features/userSlice\";\r\nimport db from \"../firebase\";\r\nimport \"./PlansScreen.css\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\n\r\nfunction PlansScreen() {\r\n  const [products, setProducts] = useState([]);\r\n\r\n  const user = useSelector(selectUser);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [subscription, setSubscription] = useState(null);\r\n\r\n  useEffect(() => {\r\n    db.collection(\"customers\")\r\n      .doc(user.uid)\r\n      .collection(\"subscriptions\")\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        querySnapshot.forEach(async (subscription) => {\r\n          setSubscription({\r\n            role: subscription.data().role,\r\n            current_period_end: subscription.data().current_period_end.seconds,\r\n            current_period_start: subscription.data().current_period_start\r\n              .seconds,\r\n          });\r\n        });\r\n      });\r\n  }, [user.uid]);\r\n\r\n  useEffect(() => {\r\n    db.collection(\"products\")\r\n      .where(\"active\", \"==\", true)\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        const products = {};\r\n        querySnapshot.forEach(async (productDoc) => {\r\n          products[productDoc.id] = productDoc.data();\r\n          const priceSnap = await productDoc.ref.collection(\"prices\").get();\r\n          priceSnap.docs.forEach((price) => {\r\n            products[productDoc.id].prices = {\r\n              priceId: price.id,\r\n              priceData: price.data(),\r\n            };\r\n          });\r\n        });\r\n        setProducts(products);\r\n      });\r\n  }, []);\r\n\r\n  const loadCheckout = async (priceId) => {\r\n    const docRef = await db\r\n      .collection(\"customers\")\r\n      .doc(user.uid)\r\n      .collection(\"checkout_sessions\")\r\n      .add({\r\n        price: priceId,\r\n        success_url: window.location.origin,\r\n        cancel_url: window.location.origin,\r\n      });\r\n\r\n    docRef.onSnapshot(async (snap) => {\r\n      const { error, sessionId } = snap.data();\r\n\r\n      if (error) {\r\n        alert(`Àn error occured: ${error.message}`);\r\n      }\r\n\r\n      if (sessionId) {\r\n        const stripe = await loadStripe(\r\n          \"pk_test_51IHbzCCGNojTUAgKoHJvbcKRLTeudl1b6nOZ66RSG9EqhffhOJschAIPSF7e0H8fye6kd9a261B1sul1ZCaTfVci00Au7bmUjd  \"\r\n        );\r\n        stripe.redirectToCheckout({ sessionId });\r\n      }\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    if (subscription?.role) {\r\n      dispatch(setPlan({plan: subscription.role.trim()}));\r\n    }\r\n  }, [subscription?.role]);\r\n\r\n  return (\r\n    <div className=\"plansScreen\">\r\n      {subscription && (\r\n        <p>\r\n          Renewal date:{\" \"}\r\n          {new Date(\r\n            subscription?.current_period_end * 1000\r\n          ).toLocaleDateString()}\r\n        </p>\r\n      )}\r\n\r\n      {Object.entries(products).map(([productId, productData]) => {\r\n        const isCurrentPackage = productData.name\r\n          ?.toLowerCase()\r\n          .includes(subscription?.role.trim());\r\n\r\n        return (\r\n          <div\r\n            key={productId}\r\n            className={`${\r\n              isCurrentPackage && \"plansScreen__plan--disabled\"\r\n            } plansScreen__plan`}\r\n          >\r\n            <div className=\"plansScreen__info\">\r\n              <h4>{productData.name}</h4>\r\n              <h5>{productData.description}</h5>\r\n            </div>\r\n\r\n            <button\r\n              onClick={() =>\r\n                !isCurrentPackage && loadCheckout(productData.prices.priceId)\r\n              }\r\n            >\r\n              {isCurrentPackage ? \"Current Package\" : \"Subscribe\"}\r\n            </button>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlansScreen;\r\n","C:\\Users\\96897\\Desktop\\Coding\\Web-dev\\JS\\Papa-React-Challenge\\netflix-clone\\src\\Route\\PrivateRoute.js",[],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":11,"column":9,"nodeType":"88","messageId":"89","endLine":11,"endColumn":13},{"ruleId":"86","severity":1,"message":"90","line":11,"column":12,"nodeType":"88","messageId":"89","endLine":11,"endColumn":20},{"ruleId":"86","severity":1,"message":"91","line":6,"column":10,"nodeType":"88","messageId":"89","endLine":6,"endColumn":15},{"ruleId":"86","severity":1,"message":"92","line":12,"column":9,"nodeType":"88","messageId":"89","endLine":12,"endColumn":17},{"ruleId":"93","severity":1,"message":"94","line":85,"column":6,"nodeType":"95","endLine":85,"endColumn":26,"suggestions":"96"},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","'truncate' is defined but never used.","'login' is defined but never used.","'dispatch' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["99"],"no-global-assign","no-unsafe-negation",{"desc":"100","fix":"101"},"Update the dependencies array to be: [dispatch, subscription.role]",{"range":"102","text":"103"},[2586,2606],"[dispatch, subscription.role]"]